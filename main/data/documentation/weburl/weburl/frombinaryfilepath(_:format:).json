{"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","kind":"typeIdentifier"},{"text":" = .native) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BidirectionalCollection","preciseIdentifier":"s:SK","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The binary file path, as a collection of 8-bit code-units."}]}],"name":"path"},{"content":[{"inlineContent":[{"type":"text","text":"The way in which "},{"code":"path","type":"codeVoice"},{"type":"text","text":" should be interpreted."},{"type":"text","text":" "},{"type":"text","text":"The default is "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference"},{"type":"text","text":", which resolves to the correct format for the"},{"type":"text","text":" "},{"type":"text","text":"compile target."}],"type":"paragraph"}],"name":"format"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"In order to create a file URL, the file path must satisfy two conditions:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It must be a syntactically valid, non-relative binary path according to the ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","type":"reference","isActive":true},{"text":", and","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"It must not contain any components which traverse to their parent directories (”","type":"text"},{"code":"..","type":"codeVoice"},{"text":"” components).","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Additionally, it must not contain ","type":"text"},{"code":"NULL","type":"codeVoice"},{"text":" bytes, so the terminator of a null-terminated string should","type":"text"},{"text":" ","type":"text"},{"text":"not be included in the binary file path. Otherwise, a ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","type":"reference","isActive":true},{"text":" error will be thrown","type":"text"},{"text":" ","type":"text"},{"text":"which can be used to provide diagnostics.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is added where required."}],"type":"paragraph"},{"type":"heading","text":"Encoding","level":3,"anchor":"Encoding"},{"inlineContent":[{"text":"The given ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","type":"reference"},{"text":" determines how the binary file path is interpreted. Each format contains","type":"text"},{"text":" ","type":"text"},{"text":"documentation and references explaining which bytes are reserved or not, and how to obtain a binary path","type":"text"},{"text":" ","type":"text"},{"text":"from the Operating System.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The TL;DR is:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"On POSIX systems (Apple OSes, Linux, Android), file and directory names are considered binary data rather","type":"text"},{"text":" ","type":"text"},{"text":"than textual. The most direct way to obtain a binary path is to use a C string (minus the null terminator).","type":"text"},{"text":" ","type":"text"},{"text":"See ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","type":"reference","isActive":true},{"text":" for more.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On Windows, the platform APIs work with paths as UTF-16. Use these and transcode to UTF-8 to obtain an"},{"type":"text","text":" "},{"type":"text","text":"8-bit binary path. They might contain invalid Unicode, but there’s no good answer as to what to do about that."},{"type":"text","text":" "},{"type":"text","text":"Throwing a "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure","type":"reference"},{"type":"text","text":" error is reasonable. See "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","type":"reference"},{"type":"text","text":" ."}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should use the '-W' family of platform functions and convert to UTF-8.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","","\/\/ Start with a C path.","let cwd: UnsafeMutablePointer<CChar> = getcwd(nil, 0)!","defer { free(cwd) }","","\/\/ Use 'realpath' to normalize.","let normalCwd: UnsafeMutablePointer<CChar> = realpath(cwd, nil)!","defer { free(normalCwd) }","","\/\/ Handle signed CChar by rebinding.","let normalCwdLen = strlen(normalCwd)","let url: WebURL = try normalCwd.withMemoryRebound(to: UInt8.self, capacity: normalCwdLen) {","  \/\/ Do not include the null terminator.","  let buffer = UnsafeBufferPointer(start: UnsafePointer($0), count: normalCwdLen)","  return try WebURL.fromBinaryFilePath(buffer)","  \/\/ ✅ \"file:\/\/\/private\/tmp\"","}"]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"code":"FilePath","type":"codeVoice"},{"type":"text","text":". The "},{"code":"WebURL(filePath: FilePath)","type":"codeVoice"},{"type":"text","text":" initializer from "},{"code":"WebURLSystemExtras","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file URL from a binary file path. It handles the transcoding on Windows mentioned"},{"type":"text","text":" "},{"type":"text","text":"above, and provides simple APIs to check that a binary path is absolute and contains no “"},{"code":"..","type":"codeVoice"},{"type":"text","text":"” components."}]},{"code":["import WebURL","import System","import WebURLSystemExtras","","let cString = getcwd(nil, 0)","defer { free(cString) }","","var path = FilePath(cString: cString)","path.lexicallyNormalize()","let url = try WebURL(filePath: path)","\/\/ ✅ \"file:\/\/\/private\/tmp\""],"type":"codeListing","syntax":"swift"}],"style":"tip"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError"}]}],"style":"note","name":"Throws"}]}],"metadata":{"modules":[{"name":"WebURL"}],"extendedModule":"WebURL","title":"fromBinaryFilePath(_:format:)","role":"symbol","externalID":"s:6WebURLAAV18fromBinaryFilePath_6formatABx_AA0eF6FormatVtKSKRzs5UInt8V7ElementRtzlFZ","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV"}],"roleHeading":"Type Method"},"seeAlsoSections":[{"title":"Converting To and From Binary File Paths","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"],"generated":true}],"sections":[],"schemaVersion":{"minor":1,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/posix":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"posix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","title":"posix","url":"\/documentation\/weburl\/filepathformat\/posix","abstract":[{"text":"A path which is compatible with the POSIX standard.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"}],"title":"fromBinaryFilePath(_:format:)","url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","type":"topic","abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/windows":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"windows","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","title":"windows","url":"\/documentation\/weburl\/filepathformat\/windows","abstract":[{"text":"A path which is compatible with those used by Microsoft Windows.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"URLFromFilePathError"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","role":"symbol","title":"URLFromFilePathError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLFromFilePathError"}],"url":"\/documentation\/weburl\/urlfromfilepatherror","abstract":[{"type":"text","text":"The reason why a file URL could not be created from a file path."}]},"doc://com.karwa.WebURL/documentation/WebURL":{"abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","kind":"symbol","role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","url":"\/documentation\/weburl"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilePathFormat"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","role":"symbol","title":"FilePathFormat","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFormat"}],"url":"\/documentation\/weburl\/filepathformat","abstract":[{"type":"text","text":"A description of a file path’s structure."}]},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError/transcodingFailure":{"url":"\/documentation\/weburl\/urlfromfilepatherror\/transcodingfailure","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The file path could not be transcoded."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"transcodingFailure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL20URLFromFilePathErrorV","text":"URLFromFilePathError"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure","title":"transcodingFailure"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"native"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"}],"title":"native","url":"\/documentation\/weburl\/filepathformat\/native","type":"topic","abstract":[{"type":"text","text":"The native path style used by the compile target."}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","title":"binaryFilePath(from:format:nullTerminated:)","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WebURL"}],"url":"\/documentation\/weburl\/weburl","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"title":"WebURL","kind":"symbol"}}}