{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryFilePath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"url"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"},{"kind":"text","text":" = .native, "},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"url","content":[{"inlineContent":[{"type":"text","text":"The file URL."}],"type":"paragraph"}]},{"name":"format","content":[{"type":"paragraph","inlineContent":[{"text":"The kind of path to construct.","type":"text"},{"text":" ","type":"text"},{"text":"The default is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference"},{"text":", which resolves to the correct format for the","type":"text"},{"text":" ","type":"text"},{"text":"compile target.","type":"text"}]}]},{"name":"nullTerminated","content":[{"inlineContent":[{"type":"text","text":"Whether the returned binary file path should include a null-terminator."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"In order to create a file path, the URL must satisfy two conditions:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"It must be a file URL, containing a semantically valid, non-relative path according to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must not contain any percent-encoded directory separators or NULL bytes."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Otherwise, a ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","isActive":true,"type":"reference"},{"text":" error will be thrown which can be used to provide diagnostics.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is removed."}]},{"text":"Encoding","type":"heading","level":3,"anchor":"Encoding"},{"type":"paragraph","inlineContent":[{"text":"Binary paths consist of bytes decoded from the URL. Depending on the platform’s file path encoding,","type":"text"},{"text":" ","type":"text"},{"text":"some interpretation may be necessary.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"On POSIX (Apple, Linux, etc) systems, the returned path may be used directly (without transcoding).","type":"text"},{"text":" ","type":"text"},{"text":"Request a null-terminated binary file path, then use the array’s pointer as a C string when interacting","type":"text"},{"text":" ","type":"text"},{"text":"with the operating system.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On Windows, we need to turn the bytes in to a set of Unicode code-points, in UTF-16 encoding."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do that, we need to guess how these bytes we received from some URL might be encoded."},{"type":"text","text":" "},{"type":"text","text":"A good strategy is to first try transcoding from UTF-8 since it is self-validating and widely used,"},{"type":"text","text":" "},{"type":"text","text":"and if that fails, fall back to trying ANSI code-pages, including the system-specific “active” code-page."},{"type":"text","text":" "},{"type":"text","text":"The platform’s "},{"type":"codeVoice","code":"MultiByteToWideChar"},{"type":"text","text":" function is able to map these encodings to Unicode."}]}]}]},{"syntax":"swift","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should convert to UTF-16 and use the '-W' family of platform functions.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","let openFn: (UnsafePointer<CChar>, Int32, mode_t) -> Int32 = Darwin.open","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the binary file path.","let binaryPath = try WebURL.binaryFilePath(from: url, nullTerminated: true)","","\/\/ Handle signed CChar by rebinding.","binaryPath.withUnsafeBufferPointer {","  $0.withMemoryRebound(to: CChar.self) { cString in","    \/\/ Use the C string to interact with the OS.","    let descriptor = openFn(cString.baseAddress!, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR | S_IROTH)","    \/\/ ... write to file","    close(descriptor)","  }","}"],"type":"codeListing"},{"type":"aside","style":"tip","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"type":"codeVoice","code":"FilePath"},{"type":"text","text":". The "},{"type":"codeVoice","code":"FilePath(url: WebURL)"},{"type":"text","text":" initializer from "},{"type":"codeVoice","code":"WebURLSystemExtras"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file path from a URL. It automatically handles platform-specific details"},{"type":"text","text":" "},{"type":"text","text":"such as transcoding on Windows."}],"type":"paragraph"},{"code":["import WebURL","import System","import WebURLSystemExtras","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the file path.","let path = try FilePath(url: url)","","\/\/ Open the file and write some data.","let descriptor = try FileDescriptor.open(path, .readWrite, options: .create, permissions: [.ownerReadWrite, .otherRead])","try descriptor.writeAll(\"hello, world!\".utf8)","try descriptor.close()"],"syntax":"swift","type":"codeListing"}]},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","seeAlsoSections":[{"generated":true,"title":"Converting To and From Binary File Paths","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"metadata":{"extendedModule":"WebURL","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryFilePath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"binaryFilePath(from:format:nullTerminated:)","role":"symbol","symbolKind":"method","roleHeading":"Type Method","externalID":"s:6WebURLAAV14binaryFilePath4from6format14nullTerminatedSays5UInt8VGAB_AA0dE6FormatVSbtKFZ","modules":[{"name":"WebURL"}]},"schemaVersion":{"minor":1,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","interfaceLanguage":"swift"},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"}],"title":"fromBinaryFilePath(_:format:)","url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","type":"topic","abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFromURLError":{"navigatorTitle":[{"text":"FilePathFromURLError","kind":"identifier"}],"title":"FilePathFromURLError","type":"topic","url":"\/documentation\/weburl\/filepathfromurlerror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFromURLError","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","role":"symbol","abstract":[{"text":"The reason why a file path could not be created from a URL.","type":"text"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL":{"abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","kind":"symbol","role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","url":"\/documentation\/weburl"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","title":"binaryFilePath(from:format:nullTerminated:)","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilePathFormat"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","role":"symbol","title":"FilePathFormat","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFormat"}],"url":"\/documentation\/weburl\/filepathformat","abstract":[{"type":"text","text":"A description of a file path’s structure."}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"native"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"}],"title":"native","url":"\/documentation\/weburl\/filepathformat\/native","type":"topic","abstract":[{"type":"text","text":"The native path style used by the compile target."}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WebURL"}],"url":"\/documentation\/weburl\/weburl","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"title":"WebURL","kind":"symbol"}}}